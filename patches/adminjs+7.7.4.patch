diff --git a/node_modules/adminjs/lib/locale/index.js b/node_modules/adminjs/lib/locale/index.js
index 278470a..6544c3a 100644
--- a/node_modules/adminjs/lib/locale/index.js
+++ b/node_modules/adminjs/lib/locale/index.js
@@ -1,22 +1,24 @@
-import deLocale from './de/translation.json' assert { type: 'json' };
-import enLocale from './en/translation.json' assert { type: 'json' };
-import esLocale from './es/translation.json' assert { type: 'json' };
-import itLocale from './it/translation.json' assert { type: 'json' };
-import jaLocale from './ja/translation.json' assert { type: 'json' };
-import plLocale from './pl/translation.json' assert { type: 'json' };
-import ptBrLocale from './pt-BR/translation.json' assert { type: 'json' };
-import uaLocale from './ua/translation.json' assert { type: 'json' };
-import zhCNLocale from './zh-CN/translation.json' assert { type: 'json' };
+import fs from 'fs';
+import path from 'path';
+
+const currentWorkingDirectory = process.cwd();
+const localeDirectory = path.join(currentWorkingDirectory, 'node_modules', 'adminjs', 'lib', 'locale');
+
+const loadJSONFile = (filePath) => {
+  const json = fs.readFileSync(filePath, 'utf-8');
+  return JSON.parse(json);
+};
+
+const locales = ['de', 'en', 'es', 'it', 'ja', 'pl', 'pt-BR', 'ua', 'zh-CN'];
+const localeData = {};
+
+locales.forEach(locale => {
+  const localeFilePath = path.join(localeDirectory, locale, 'translation.json');
+  const localeRaw = loadJSONFile(localeFilePath);
+  localeData[`${locale}Locale`] = { ...localeRaw, type: 'json' };
+});
+
+export const localeDataFinal = localeData;
+
 export * from './config.js';
 export * from './default-config.js';
-export const locales = {
-  de: deLocale,
-  en: enLocale,
-  es: esLocale,
-  it: itLocale,
-  ja: jaLocale,
-  pl: plLocale,
-  'pt-BR': ptBrLocale,
-  ua: uaLocale,
-  'zh-CN': zhCNLocale
-};
\ No newline at end of file
